name: Deploy Laravel + Vue to Azure

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql, pdo_pgsql, pgsql, zip, gd, curl, fileinfo

      - name: Validate composer.json
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install npm dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Create production environment file
        run: |
          cat > .env << EOF
          APP_NAME=Laravel
          APP_ENV=production
          APP_KEY=
          APP_DEBUG=false
          APP_URL=https://sikarawebapp.azurewebsites.net
          
          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug
          
          DB_CONNECTION=pgsql
          DB_HOST=127.0.0.1
          DB_PORT=5432
          DB_DATABASE=uyy
          DB_USERNAME=postgres
          DB_PASSWORD=
          
          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          
          MEMCACHED_HOST=127.0.0.1
          
          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379
          
          MAIL_MAILER=smtp
          MAIL_HOST=mailpit
          MAIL_PORT=1025
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          MAIL_ENCRYPTION=null
          MAIL_FROM_ADDRESS="hello@example.com"
          MAIL_FROM_NAME="\${APP_NAME}"
          
          AWS_ACCESS_KEY_ID=
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false
          
          PUSHER_APP_ID=
          PUSHER_APP_KEY=
          PUSHER_APP_SECRET=
          PUSHER_HOST=
          PUSHER_PORT=443
          PUSHER_SCHEME=https
          PUSHER_APP_CLUSTER=mt1
          
          VITE_APP_NAME="\${APP_NAME}"
          VITE_PUSHER_APP_KEY="\${PUSHER_APP_KEY}"
          VITE_PUSHER_HOST="\${PUSHER_HOST}"
          VITE_PUSHER_PORT="\${PUSHER_PORT}"
          VITE_PUSHER_SCHEME="\${PUSHER_SCHEME}"
          VITE_PUSHER_APP_CLUSTER="\${PUSHER_APP_CLUSTER}"
          EOF

      - name: Remove development files
        run: |
          rm -rf tests
          rm -rf node_modules
          rm -f package.json package-lock.json
          rm -f phpunit.xml
          rm -f vite.config.js
          rm -f tailwind.config.js
          rm -f postcss.config.js
          rm -f .gitignore
          rm -f README.md

      - name: Create startup script
        run: |
          cp startup.sh startup_backup.sh || echo "No existing startup.sh found"
          cat > startup.sh << 'EOF'
          #!/bin/bash
          
          echo "Starting Laravel application setup..."
          
          # Navigate to app directory
          cd /home/site/wwwroot
          
          # Remove default Azure files
          rm -f hostingstart.html
          rm -f default.html
          
          # Set proper permissions
          chmod -R 755 storage
          chmod -R 755 bootstrap/cache
          chown -R www-data:www-data storage
          chown -R www-data:www-data bootstrap/cache
          
          # Copy environment file if it doesn't exist
          if [ ! -f .env ]; then
              echo "Creating .env file from .env.example"
              cp .env.example .env
          fi
          
          # Generate application key if not set
          if ! grep -q "APP_KEY=" .env || grep -q "APP_KEY=$" .env; then
              echo "Generating application key..."
              php artisan key:generate --force
          fi
          
          # Clear any existing cache
          php artisan cache:clear
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
          
          # Cache configuration for production
          echo "Caching configuration..."
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # Create storage symlink if it doesn't exist
          if [ ! -L public/storage ]; then
              php artisan storage:link
          fi
          
          echo "Laravel setup completed successfully"
          
          # Start PHP-FPM
          exec php-fpm
          EOF

      - name: Make startup script executable
        run: chmod +x startup.sh

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: sikarawebapp
          slot-name: production
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: .